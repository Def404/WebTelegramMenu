@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - WebTelegramMenu</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/WebTelegramMenu.styles.css" asp-append-version="true"/>
    <script src="~/js/telegram-web-app.js"></script>
</head>
<body>
<div class="container">
	<div class="column">
		<div class="device-container">
			<p class="text">device1</p>
			<div class="icon">
				<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-lamp" viewBox="0 0 16 16">
					<path fill-rule="evenodd" d="M5.04.303A.5.5 0 0 1 5.5 0h5c.2 0 .38.12.46.303l3 7a.5.5 0 0 1-.363.687h-.002c-.15.03-.3.056-.45.081a32.731 32.731 0 0 1-4.645.425V13.5a.5.5 0 1 1-1 0V8.495a32.753 32.753 0 0 1-4.645-.425c-.15-.025-.3-.05-.45-.08h-.003a.5.5 0 0 1-.362-.688l3-7ZM3.21 7.116A31.27 31.27 0 0 0 8 7.5a31.27 31.27 0 0 0 4.791-.384L10.171 1H5.83L3.209 7.116Z"/>
					<path d="M6.493 12.574a.5.5 0 0 1-.411.575c-.712.118-1.28.295-1.655.493a1.319 1.319 0 0 0-.37.265.301.301 0 0 0-.052.075l-.001.004-.004.01V14l.002.008a.147.147 0 0 0 .016.033.62.62 0 0 0 .145.15c.165.13.435.27.813.395.751.25 1.82.414 3.024.414s2.273-.163 3.024-.414c.378-.126.648-.265.813-.395a.62.62 0 0 0 .146-.15.148.148 0 0 0 .015-.033L12 14v-.004a.301.301 0 0 0-.057-.09 1.318 1.318 0 0 0-.37-.264c-.376-.198-.943-.375-1.655-.493a.5.5 0 1 1 .164-.986c.77.127 1.452.328 1.957.594C12.5 13 13 13.4 13 14c0 .426-.26.752-.544.977-.29.228-.68.413-1.116.558-.878.293-2.059.465-3.34.465-1.281 0-2.462-.172-3.34-.465-.436-.145-.826-.33-1.116-.558C3.26 14.752 3 14.426 3 14c0-.599.5-1 .961-1.243.505-.266 1.187-.467 1.957-.594a.5.5 0 0 1 .575.411Z"/>
				</svg>
			</div>
			<p class="hint">
				в гостинной
			</p>
		</div>
		<button class="button">
			Включить
		</button>
	</div>

	<div class="column">
		<div class="device-container">
			<p class="text">device2</p>
			<div class="icon">
				<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-camera-video" viewBox="0 0 16 16">
					<path fill-rule="evenodd" d="M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556v4.35zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2z"/>
				</svg>
			</div>
			<p class="hint">
				на входе
			</p>
		</div>
		<button class="button">
			Включить
		</button>
	</div>

	<div class="column">
		<div class="device-container">
			<p class="text">device3</p>
			<div class="icon">
				<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-printer" viewBox="0 0 16 16">
					<path d="M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z"/>
					<path d="M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z"/>
				</svg>
			</div>
			<p class="hint">
				на рабочем столе
			</p>
		</div>
		<a class="button" href="~/&handler=ChangeStatus">
			Включить
		</a>
	</div>
	
</div>


<style>
	body{
    	color: var(--tg-theme-text-color);
    	background: var(--tg-theme-bg-color);
    	display: flex;
    	flex-direction: column;
    	align-items: center;
    	/*font-size: 18px;*/
    }
    
    .container{
    	display: flex;
    }
    
    .column{
    	margin: 5px;
    }
    .device-container{
    	background: var(--tg-theme-secondary-bg-color);
    	width: 110px;
    	height: 110px;
    	border-radius: 10px;
    	margin-bottom: 5px;
    	display: flex;
        flex-direction: column;
        align-items: center;
            	
    }
    
    .icon{
    	color: var(--tg-theme-text-color);
    }
    
    .text{
    	color: var(--tg-theme-text-color);
    	font-size: 14px;
    }
    
    .hint{
    	margin-top: 5px;
    	color: var(--tg-theme-hint-color);
    	font-size: 10px;
    }
    
    .link{
    	color: var(--tg-theme-link-color);
    }
    
    .button{
    	background: var(--tg-theme-button-color);
    	color: var(--tg-theme-button-text-color);
    	border: none;
    	font-size: 14px;
    	width: 110px;
    	border-radius: 5px;
    	padding: 5px;
    	font-weight: 500;
    }
    
</style>

<script type="application/javascript">
let tg = window.Telegram.WebApp;
/*tg.expand();*/


tg.MainButton.setText("Changed Text1"); 

btn.addEventListener('click', function(){ //вешаем событие на нажатие html-кнопки
	if (tg.MainButton.isVisible){ //если кнопка показана 
		tg.MainButton.hide() //скрываем кнопку 
	}
  else{ //иначе
  	tg.MainButton.show() //показываем 
  }
});

let btnED = document.getElementById("btnED"); //получаем кнопку активировать/деактивировать
btnED.addEventListener('click', function(){ //вешаем событие на нажатие html-кнопки
	if (tg.MainButton.isActive){ //если кнопка показана 
		tg.MainButton.setParams({"color": "#E0FFFF"}); //меняем цвет
		tg.MainButton.disable() //скрываем кнопку 
	}
	else{ //иначе
		tg.MainButton.setParams({"color": "#143F6B"}); //меняем цвет
		tg.MainButton.enable() //показываем 
	}
});

Telegram.WebApp.onEvent('mainButtonClicked', function(){
	tg.sendData("some string that we need to send"); 
	//при клике на основную кнопку отправляем данные в строковом виде
});

let usercard = document.getElementById("usercard"); //получаем блок usercard 

let profName = document.createElement('p'); //создаем параграф
/*profName.innerText = `${tg.initDataUnsafe.user.first_name}
${tg.initDataUnsafe.user.last_name}
${tg.initDataUnsafe.user.username} (${tg.initDataUnsafe.user.language_code})`;*/
//выдем имя, "фамилию", через тире username и код языка
/*
usercard.appendChild(profName); //добавляем 
*/

let userid = document.createElement('p'); //создаем еще параграф 
/*userid.innerText = `${tg.initDataUnsafe.user.id}`;*/ //показываем user_id
/*
usercard.appendChild(userid); //добавляем
*/


</script>
</body>
</html>